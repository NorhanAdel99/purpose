// ================================ // $-- lang --$ // ================================ //

// /////
/* Main properties that control the layout direction are:
-----------------------------------------------
- Direction (LTR/RTL)
- Float (left/right)
- Margin 
- Padding
- Absolute position (left/right)
- Background position (left/right)
- Border
- Border radious
- Note: "Think about flexbox properties"
*/

/* Clearfix */

@mixin clearfix {
    &::after {
        display: block;
        content: "";
        clear: both;
    }
}

/* Direction */

@mixin dir-direction($value) {
    @if $value==ltr {
        html[lang="en"] & {
            direction: ltr;
        }

        html[lang="ar"] & {
            direction: rtl;
        }
    }

    @else if $value==rtl {
        html[lang="en"] & {
            direction: rtl;
        }

        html[lang="ar"] & {
            direction: ltr;
            
        }
    }
}

/* Float */

@mixin dir-float($value) {
    @if $value==left {
        html[lang="en"] & {
            float: left;
        }

        html[lang="ar"] & {
            float: right;
        }
    }

    @else if $value==right {
        html[lang="en"] & {
            float: right;
        }

        html[lang="ar"] & {
            float: left;
        }
    }

    @else {
        float: none;
    }
}

/* Margin */

@mixin dir-margin($top, $right, $bottom, $left) {
    html[lang="en"] & {
        margin: $top $right $bottom $left;
    }

    html[lang="ar"] & {
        margin: $top $left $bottom $right;
    }
}

@mixin dir-margin-left($value) {
    html[lang="en"] & {
        margin-left: $value;
    }

    html[lang="ar"] & {
        margin-right: $value;
    }
}

@mixin dir-margin-right($value) {
    html[lang="en"] & {
        margin-right: $value;
    }

    html[lang="ar"] & {
        margin-left: $value;
    }
}

/* Padding */

@mixin dir-padding($top, $right, $bottom, $left) {
    html[lang="en"] & {
        padding: $top $right $bottom $left;
    }

    html[lang="ar"] & {
        padding: $top $left $bottom $right;
    }
}

@mixin dir-padding-left($value) {
    html[lang="en"] & {
        padding-left: $value;
    }

    html[lang="ar"] & {
        padding-right: $value;
    }
}

@mixin dir-padding-right($value) {
    html[lang="en"] & {
        padding-right: $value;
    }

    html[lang="ar"] & {
        padding-left: $value;
    }
}

/* Left And Right For Absolute Position */

@mixin dir-left($value) {
    html[lang="en"] & {
        left: $value;
        right: unset;
    }

    html[lang="ar"] & {
        right: $value;
        left: unset;

    }
}

@mixin dir-right($value) {
    html[lang="en"] & {
        right: $value;
    }

    html[lang="ar"] & {
        left: $value;
    }
}

/* Border */

@mixin dir-border-left($value) {
    html[lang="en"] & {
        border-left: $value;
    }

    html[lang="ar"] & {
        border-right: $value;
    }
}

@mixin dir-border-right($value) {
    html[lang="en"] & {
        border-right: $value;
    }

    html[lang="ar"] & {
        border-left: $value;
    }
}

@mixin dir-border-radius-start($value) {
    html[lang="en"] & {
        border-top-left-radius: $value;
        border-bottom-left-radius: $value;
    }

    html[lang="ar"] & {
        border-top-right-radius: $value;
        border-bottom-right-radius: $value;
    }
}

@mixin dir-border-radius-end($value) {
    html[lang="en"] & {
        border-top-right-radius: $value;
        border-bottom-right-radius: $value;
    }

    html[lang="ar"] & {
        border-top-left-radius: $value;
        border-bottom-left-radius: $value;
    }
}

@mixin disapearMenu($value) {
    html[lang="en"] & {
        transform: translateX(-($value));
    }

    html[lang="ar"] & {
        transform: translateX($value);
    }
}


html[lang="en"] {
    .rotateArrow {
        transform: rotate(180deg);
    }
}
